<?php
require_once("../includes/initialize.php");

$message = "";
$username = "";
$profileType = "";
$security = new Security_Functions();

// Check if it is a get request
if (request_is_get() || request_is_post()) {
	// Check that only allowed parameters is passed into the form
	$get_params = allowed_get_params(['profile']);

	// Eliminate HTML tags embedded in the form inputs
	foreach($get_params as $param) {
		// run htmlentities check on the parameters
		if(isset($get_params[$param])) {
			// run htmlentities check on the parameters
			$get_params[$param] = h2($param);
		} 
	}

	if (isset($get_params['profile']) && ($get_params['profile'] == 'customer')) {
		$profileType = $_SESSION['profilePortalType'] = 'customer';
	} else {
		$profileType = $_SESSION['profilePortalType'] = 'user';
	}

    // This should be only run for a get request
	if ($profileType === 'user') {
		// Define the facebook redirect URI for the user login portal
		defined('FB_REDIRECT_URI') ? null : define( 'FB_REDIRECT_URI', 'https://whosabiwork.com/Public/loginPage.php?profile=user' );
	} elseif ($profileType === 'customer') {
		// Define the facebook redirect URI for the customer login portal
		defined('FB_REDIRECT_URI') ? null : define( 'FB_REDIRECT_URI', 'https://whosabiwork.com/Public/loginPage.php?profile=customer' );
	}
	
	if (request_is_get()) {
    	if (isset($_GET['state']) && FB_APP_STATE == $_GET['state']) {
    		// $accessToken = getAccessTokenWithCode($_GET['code']);
    
    		$fbLogin = $_SESSION['fbLogin'] = tryAndLoginWithFacebook($_GET);
    	}
    }
}

// Check if it is post request and from the same domain
if(request_is_post() && request_is_same_domain()) {
	// Check that only allowed parameters is passed into the form
	$post_params = allowed_post_params(['username', 'password', 'cusUsername', 'cusPassword', 'username_user', 'password_user', 'first_name', 'last_name', 'phone_number', 'email', 'userSignIn', 'customerSignIn', 'user_register']);

	// Eliminate HTML tags embedded in the form inputs
	foreach($post_params as $param) {
		// run htmlentities check on the parameters
		if(isset($post_params[$param])) {
			// run htmlentities check on the parameters
			$post_params[$param] = h2($param);
		} 
	}
	
	// || !$security->csrf_token_is_recent()
	if(!$security->csrf_token_is_valid() || !$security->csrf_token_is_recent()) {
		$message = "Improper login attempt.";
		// Login instances of imporoper login into the log file.
	} else {
	// CSRF tests passed--form was created by us recently.
		
		// Remember to give your form's submit tag a name="submit" attribute!
		if (isset($post_params['userSignIn'])) { // Form has been submitted.
			
			// Get the user's username and password from the POST global variable.
			$loginId = trim($post_params['username']);
			$password = trim($post_params['password']);
			
			// validate_user();
			$validate->validate_user();
			
			if (empty($validate->errors)) {
				// Check database to see if username/phone number/email and password exist.
					
				$login_check = new User_Failed_Login();
				
				// After you are sure you have a username, throttle before checking for the username and password in the database
				$user_throttle_delay = $login_check->throttle_failed_user_logins($loginId);
				if($user_throttle_delay > 0) {
					// Throttled at the moment, try again after delay period
					$message  = "Too many failed logins. ";
					$message .= "You must wait {$user_throttle_delay} minutes before you can attempt another login.";
				} else {
					// Check what type of login id was used such as a username, phone number or email address
					// Check email first
					$loginType = getLoginIdType($loginId);
					// This is done because authenticate function is not static	
					$user = new User();
					$found_user = $user->authenticate($loginId, $loginType, $password);
			
					// After authentication, you can examine the user further before logging them in. Such check could be to find out if the user has paid their dues.
				
					// Condition if the user is found
					if ($found_user) {
						// Clear any attempt of login trial after authentication is passed
						$login_check->clear_user_failed_logins($loginId);
						
						// If the user signed in with FB email account, update their FB user id and FB access token
						if ( isset( $_SESSION['fb_user_info']['id'], $_SESSION['fb_access_token'] ) ) {
							// if we have facebook id save it
							$found_user->fb_user_id = $_SESSION['fb_user_info']['id'];
							$found_user->update();
							
							// if we have an FB access token save it
							$found_user->fb_access_token = $_SESSION['fb_access_token'];
							$found_user->update();
							
							// Clear Facebook session used
	                        clearFBsession(); 
						}
						
						// If the user is found, tell session to log them in.
						$session->user_login($found_user);
						$session->message("Welcome back {$found_user->full_name()}.");
						// Create a log that the user has logged into the system
						user_log_action('Login', "{$found_user->username} logged in.");
						// check if the user is already adovacting a user before redirecting to the livePhotosFedd page
						$cusAdvocated = Advocate::find_all_advocated_by_user($found_user->id);
						if (!empty($cusAdvocated)) {
							redirect_to("/Public/livePhotosFeed.php");
						} else {
							redirect_to('/Public/user/userEditPage.php?id='.urlencode($found_user->id));
						}						
					} else {
						// Record a failed login of the user in the database
						$login_check->record_user_failed_login($loginId);
						// username/password combo was not found in the database
						$message = "Username/password combination is incorrect.";
					}
					// set $iscustomer to false in the authenticating condition if a user was retrieved or true if a user was not retrieved
				}
			} else {
				// $message = "There was a validation error. ";
			}
		} elseif (isset($post_params['customerSignIn'])) { // Form has been submitted.
			
			// Get the user's username and password from the POST global variable.
			$loginId = trim($post_params['cusUsername']);
			$password = trim($post_params['cusPassword']);
			
			// validate_user();
			$validate->validate_user();
			
			if (empty($validate->errors)) {
				// Check database to see if username/phone number/email and password exist.
				
				$cus_login_check = new Customer_Failed_Login();
				
				// After you are sure you have a username, throttle before checking for the username and password in the database
				$cus_throttle_delay = $cus_login_check->throttle_failed_customer_logins($loginId);
				if($cus_throttle_delay > 0) {
					// Throttled at the moment, try again after delay period
					$message  = "Too many failed logins. ";
					$message .= "You must wait {$cus_throttle_delay} minutes before you can attempt another login.";					
				} else {
					// Check email first
					$loginType = getLoginIdType($loginId);
					$customer = new Customer();
					$found_customer = $customer->authenticate($loginId, $loginType, $password);
			
					// After authentication, you can examine the user further before logging them in. Such check could be to find out it the user has paid their dues.
				
					// Condition if the user is found
					if ($found_customer) {
						// Clear any attempt of login trial after authentication is passed
						$cus_login_check->clear_customer_failed_logins($loginId);
						
						// If the customer signed in with FB email account, update their FB user id and FB access token
						if ( isset( $_SESSION['fb_user_info']['id'], $_SESSION['fb_access_token'] ) ) {
							// if we have facebook id save it
							$found_customer->fb_user_id = $_SESSION['fb_user_info']['id'];
							$found_customer->update();
							
							// if we have an FB access token save it
							$found_customer->fb_access_token = $_SESSION['fb_access_token'];
							$found_customer->update();
							
							// Clear Facebook session used
                            clearFBsession(); 
						}
						
						// If the user is found, tell session to log them in.
						$session->customer_login($found_customer);
						$session->message("Welcome back {$found_customer->full_name()}.");
						// Create a log that the user has logged into the system
						cus_log_action('Login', "{$found_customer->username} logged in.");
						// check if the user is already adovacting a user before redirecting to the livePhotosFedd page
						$cusAdvocated = Advocate::find_all_advocated_by_customer($found_customer->id);
						if (!empty($cusAdvocated)) {
							redirect_to("/Public/livePhotosFeed.php");
						} else {
							redirect_to('/Public/customer/customerEditPage2.php?id='.urlencode($found_customer->id));
						}
					} else {
						// Record a failed login of the user in the database
						$cus_login_check->record_customer_failed_login($loginId);
						// username/password combo was not found in the database
						$message = "Username/password combination is incorrect.";
					}
					// set $iscustomer to false in the authenticating condition if a user was retrieved or true if a user was not retrieved
				}
			} else {
				// $message = "There was a validation error. ";
			}
		} else { 
			// $message = "Please log in.";
		}
	}
	// This is a failed post login attempt, redirect to the login page again.
	$username = trim($post_params['username_user']);
	$password = trim($post_params['password_user']);
} else {
	// Form has not been submitted.
	$username = ""; $password = "";
}
// Destroy the token after use
$security->destroy_csrf_tokens();

// Determine what tapped panels tab gets displayed
function displayTabbedPanelsTab($profileType) {
	$htmlOutput = '';

	if ($profileType == 'user') {
		$htmlOutput .= '<li class="TabbedPanelsTab" tabindex="0">User Log In</li>';
	} else {
		$htmlOutput .= '<li class="TabbedPanelsTab" tabindex="0">Business Log In</li>';
	}
	
	return $htmlOutput;
}

// Determine what tapped panels content gets displayed
function displayTabbedPanelsContent($profileType) {
	global $message;
	global $validate;
	global $sessionMessage;
	global $security;
	global $username;
	$htmlOutput = '';

	if ($profileType === 'user') {
		$htmlOutput .= '<!-- Displays message of successfully sign-in -->';
		$htmlOutput .= $message.'<br/>';
		$htmlOutput .= '<!-- Display message of form error -->';
		$htmlOutput .= $validate->form_errors_signIn($validate->errors);
		$htmlOutput .= output_message($sessionMessage);
		
		// Inform user if check for facebook account found matches an email on the website
		if (isset( $_SESSION['eci_login_required_to_connect_facebook'] ) && $_SESSION['eci_login_required_to_connect_facebook']) {
			$htmlOutput .= '<div style="margin-bottom:10px; margin-left: 10px; margin-right: 10px;"> An account already exists with that email address. To connect your Facebook account, enter your password.
			</div>';
		}
		
		$htmlOutput .= '<form action="" method="post" enctype="application/x-www-form-urlencoded" name="userForm" id="userForm">';
		$htmlOutput .= $security->csrf_token_tag();
		$htmlOutput .= '<p>';
		$htmlOutput .= '<!-- Username -->';
		$htmlOutput .= '<input name="username" type="text" id="username" size="60" maxlength="50" placeholder="Username / Email / Phone number" autocomplete="off" autocorrect="off" autocapitalize="none" value="';
		    if (isset($_SESSION['fb_user_info']['email']) && $_SESSION['eci_login_required_to_connect_facebook']) {
				$htmlOutput .= $_SESSION['fb_user_info']['email'];
			} else {
				$htmlOutput .= htmlentities($username);
			}			
		$htmlOutput .= '"/>';
		$htmlOutput .= '<br />';
		$htmlOutput .= '<!-- Password -->';
		$htmlOutput .= '<input name="password" type="password" id="password" size="60" maxlength="50" placeholder="Password" autocomplete="off" autocorrect="off" autocapitalize="none" />';
		$htmlOutput .= '<br />';
		$htmlOutput .= '<a class="linkStyleButton2 forgotPassword" href="forgotPassword.php?request=user">Forgot password?</a>';
		$htmlOutput .= '</p>';
		$htmlOutput .= '<input name="userSignIn" type="submit" id="userSignIn" value="Log In" />';
		
		$htmlOutput .= '<p id="loginInfoText" ><span>Or Log In Using</span></p>';
		
		// Div for displaying error from social media login
		$htmlOutput .= '<div style="color:red;">';
		    if ( !empty( $_SESSION['fbLogin']['status'] ) && 'fail' == $_SESSION['fbLogin']['status'] ) {
		        $htmlOutput .= $_SESSION['fbLogin']['message'];
		        unset($_SESSION['fbLogin']);
		        $htmlOutput .= ' <a style="text-decoration:none;" href="createUserAccount.php">Sign Up</a>';
		    }
		$htmlOutput .= '</div>';
		
		// Facebook log in button
		$htmlOutput .= '
		<a style="text-decoration: none;" href="'.getFacebookLoginUrl().'">';
		$htmlOutput .= '<div name="facebookSignIn" type="submit" class="loginButton" id="facebookSignIn" > <span style="padding-right: 10px;" ><i class="fab fa-facebook "></i></span> Facebook </div>';
		$htmlOutput .= '</a>';				
	
	    // Google log in button
	    // <img src="https://developers.google.com/identity/images/g-logo.png">
	    // <span style="padding-right: 10px;" ><i class="fab fa-google "></i></span> 
		$htmlOutput .= '<div name="googleSignIn" type="submit" class="loginButton" id="googleSignIn2"> <span style="padding-right: 10px;" ><img style="width:20px;" src="https://developers.google.com/identity/images/g-logo.png"></span> Google </div>';
		
		$htmlOutput .= '<p id="signUpAlt">Don\'t have an account? <a id="signUpLink" href="createUserAccount.php">Sign up here</a> </p>';
		
		$htmlOutput .= '</form>';
	} else {
		$htmlOutput .= '<!-- Displays message of successfully sign-in -->';
		$htmlOutput .= $message.'<br/>';
		$htmlOutput .= '<!-- Display message of form error -->';
		$htmlOutput .= $validate->form_errors_signIn($validate->errors);
		$htmlOutput .= output_message($sessionMessage);
		
		// Inform user if check for facebook account found matches an email on the website
		if (isset( $_SESSION['eci_login_required_to_connect_facebook'] ) && $_SESSION['eci_login_required_to_connect_facebook']) {
			$htmlOutput .= '<div style="margin-bottom:10px; margin-left: 10px; margin-right: 10px;"> An account already exists with that email address. To connect your Facebook account, enter your password.
			</div>';
		}
		
		$htmlOutput .= '<form action="" method="post" enctype="application/x-www-form-urlencoded" name="customerForm" id="customerForm">';
		$htmlOutput .= $security->csrf_token_tag();
		$htmlOutput .= '<p>';
		$htmlOutput .= '<!-- Username -->';
		$htmlOutput .= '<input name="cusUsername" type="text" id="cusUsername" size="60" maxlength="50" placeholder="Username / Email / Phone number" autocomplete="off" autocorrect="off" autocapitalize="none" value="';
		    if (isset($_SESSION['fb_user_info']['email']) && $_SESSION['eci_login_required_to_connect_facebook']) {
				$htmlOutput .= $_SESSION['fb_user_info']['email'];
			} else {
				$htmlOutput .= htmlentities($username);
			}			
		$htmlOutput .= '"/>';
		$htmlOutput .= '<br />';
		$htmlOutput .= '<!-- Password -->';
		$htmlOutput .= '<input name="cusPassword" type="password" id="cusPassword" size="60" maxlength="50" placeholder="Password" autocomplete="off" autocorrect="off" autocapitalize="none" />';
		$htmlOutput .= '<br />';
		$htmlOutput .= '<a class="linkStyleButton2 forgotPassword" href="forgotPassword.php?request=customer">Forgot password?</a>';
		$htmlOutput .= '</p>';
		$htmlOutput .= '<input name="customerSignIn" type="submit" id="customerSignIn" value="Log In" />';

		$htmlOutput .= '<p id="loginInfoText" ><span>Or Log In Using</span></p>';
	   	
		// Button for displaying error from social media login
		$htmlOutput .= '<div style="color:red;">';
		    if ( !empty( $_SESSION['fbLogin']['status'] ) && 'fail' == $_SESSION['fbLogin']['status'] ) {
		        $htmlOutput .= $_SESSION['fbLogin']['message'];
		        unset($_SESSION['fbLogin']);
		        $htmlOutput .= ' <a style="text-decoration:none;" href="createBusinessAccount.php">Sign Up</a>';
		    }
		$htmlOutput .= '</div>';
		
	   	// Facebook log in button
	   	$htmlOutput .= '
		<a style="text-decoration: none;" href="'.getFacebookLoginUrl().'">';
		$htmlOutput .= '<div name="facebookSignIn" type="submit" class="loginButton" id="facebookSignIn" > <span style="padding-right: 10px;" ><i class="fab fa-facebook "></i></span> Facebook </div>';
		$htmlOutput .= '</a>';
				
		// Google log in button
		// <span style="padding-right: 10px;" ><i class="fab fa-google "></i></span> 
		$htmlOutput .= '<div name="googleSignIn" type="submit" class="loginButton" id="googleSignIn2"> <span style="padding-right: 10px;" ><img style="width:20px;" src="https://developers.google.com/identity/images/g-logo.png"></span> Google </div>';
		
		$htmlOutput .= '<p id="signUpAlt">Don\'t have an account? <a id="signUpLink" href="createBusinessAccount.php">Sign up here</a> </p>';
		
		$htmlOutput .= '</form>';
		$htmlOutput .= '</form>';
	}

	return $htmlOutput;
}

?>

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<!-- Global site tag (gtag.js) - Google Analytics -->
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-171769876-1"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'UA-171769876-1');
</script>

<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<title>Log In</title>
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<link rel="shortcut icon" type="image/png" href="/Public/images/WhoSabiWorkLogo.png" />
<style type="text/css">
</style>

<link href="../HomePageStyles.css" rel="stylesheet" type="text/css" />
<link href="./stylesheets/loginPageStyle.css" rel="stylesheet" type="text/css" />

<!-- Font Awesome Link -->
<link href="./stylesheets/web-fonts-with-css/css/fontawesome-all.min.css" rel="stylesheet" type="text/css" />

<link href="../SpryAssets/SpryMenuBarHorizontal.css" rel="stylesheet" type="text/css" />
<script src="../SpryAssets/SpryMenuBar.js" type="text/javascript"></script>

<link href="../SpryAssets/SpryTabbedPanels.css" rel="stylesheet" type="text/css" />
<script src="../SpryAssets/SpryTabbedPanels.js" type="text/javascript"></script>

<script src="./javascripts/jquery.js" type="text/javascript"></script>

</head>


<body>
	<div id="topContainer">
		<!-- Include the header and navigation of the website. This will make the header and navigation section consistent -->
		<?php include_layout_template('public_header.php'); ?>
	</div>
	
	<!-- Begining of Container -->
	<div id="container">
	  <!-- Begining of Main Section -->
	  <div class="mainLogin">
	    <!-- Begining of Login Panel -->
		<div class="loginPanel">
		  <!-- Begining of Tabbed Panel -->
		  <div id="TabbedPanels1" class="TabbedPanels">
			<ul class="TabbedPanelsTabGroup">
			  	<!-- Display tabbed panels tab -->
			  	<?php echo displayTabbedPanelsTab($profileType); ?>
			</ul>
			<!-- tabbed Pannels content Group div -->
			<div class="TabbedPanelsContentGroup">
			  <!-- Begining of User/Customer Login Form -->
			  <div class="TabbedPanelsContent">
			  	<!-- Display tabbed panels content -->
			  	<?php echo displayTabbedPanelsContent($profileType); ?>
			  </div>
			  <!-- End of User/Customer Login Form -->
			</div> <!-- End Tabbed Pannels Content Group div -->
		  </div> <!-- End of Tabbed Panel -->
		</div> <!-- End of Login Panel -->
      </div> <!-- End of Main Section -->

	  <!-- Display the footer section -->
	  <?php include_layout_template('public_footer.php'); ?>
	</div> <!-- End of Container -->
	
	<script type="text/javascript">
		var TabbedPanels1 = new Spry.Widget.TabbedPanels("TabbedPanels1");
		// var TabbedPanels2 = new Spry.Widget.TabbedPanels("TabbedPanels2");
	</script>
	<script type="text/javascript" src="./javascripts/genericJSs.js"></script>
</body>
</html>

<?php if(isset($database)) { $database->close_connection(); } ?>